{"version":3,"sources":["Resources/ProfilePic.jpg","Components/MainPage/SubSections/Introduction.jsx","Components/MainPage/MainPage.jsx","Components/Header.jsx","App.js","HelperFunctions/StorageHelpers.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","position","height","paper","padding","spacing","top","-ms-transform","transform","title","marginBottom","floatLeft","display","spaceEater","flexGrow","avatar","width","backgroundColor","palette","secondary","main","color","primary","contrastText","marginLeft","marginRight","boxShadow","shadows","avatarHolder","marginTop","Introduction","props","classes","react_default","a","createElement","className","Paper","elevation","profile","Avatar","alt","src","Face_default","Grid","container","item","xs","Typography","variant","component","align","Divider","Button","onClick","window","open","margin","maxWidth","MainPage","titleIcon","Header","AppBar","Toolbar","IconButton","toggleTheme","Brightness7_default","type","createMuiTheme","amber","background","default","App","_React$useState","React","useState","key","console","log","value","localStorage","getItem","getLocalStorage","_React$useState2","Object","slicedToArray","themeType","setThemeType","useEffect","setItem","myTheme","MuiThemeProvider","CssBaseline","prevThemeType","Boolean","location","hostname","match","require","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3730cf77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ProfilePic.51a08a6e.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Paper, Grid, Divider, Avatar } from '@material-ui/core';\nimport NoImageIcon from '@material-ui/icons/Face';\n\nimport profile from '../../../Resources/ProfilePic.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    height: '85vh',\n  },\n  paper: {\n    padding: theme.spacing(5),\n    position: 'absolute',\n    top: '50%',\n\n    '-ms-transform': 'translateY(-50%)',\n    transform: 'translateY(-50%)',\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n  },\n  floatLeft: {\n    display: 'flex',\n  },\n  spaceEater: {\n    flexGrow: 1,\n  },\n  avatar: {\n    width: 150,\n    height: 150,\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.contrastText,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    boxShadow: theme.shadows[12],\n  },\n  avatarHolder: {\n    marginTop: -125,\n    marginBottom: theme.spacing(3),\n  }\n}));\n\nexport default function Introduction(props) {\n  const classes = useStyles();\n\n  const contactMe = () => {\n    window.open('mailto:scott.ma.benton@gmail.com');\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper} elevation={12}>\n        <div className={classes.avatarHolder}>\n          {profile ?\n            <Avatar alt=\"SB\" src={profile} className={classes.avatar} />\n            :\n            <Avatar className={classes.avatar}>\n              <NoImageIcon className={classes.avatar} />\n            </Avatar>\n          }\n        </div>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n\n            <Typography variant='h3' component='h3' align='center' className={classes.title}>\n              Scott Benton\n          </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='body1' component='p'>\n              I'm a Software Engineer with experience in both front end development and back end development. Based in Newark, DE.\n          </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n\n          <Grid item xs={12} className={classes.floatLeft}>\n            <div className={classes.spaceEater} />\n            <Button onClick={contactMe} variant='contained' color='primary'>\n              Contact Me\n          </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Introduction from './SubSections/Introduction';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3),\n    maxWidth: 800,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n}));\n\n\nexport default function MainPage(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Introduction />\n    </div>\n  )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ThemeIcon from '@material-ui/icons/Brightness7';\n\nimport MainPage from './MainPage/MainPage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    color: theme.palette.primary.contrastText,\n  },\n  titleIcon: {\n    color: theme.palette.primary.contrastText,\n  }\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} >\n            {'<SB>'}\n          </Typography>\n          <IconButton onClick={() => props.toggleTheme()}>\n            <ThemeIcon className={classes.titleIcon} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <MainPage />\n      </div>\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport Header from './Components/Header';\nimport './App.css';\nimport { amber } from '@material-ui/core/colors';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { setLocalStorage, getLocalStorage } from './HelperFunctions/StorageHelpers';\n\nconst theme = (type) => createMuiTheme({\n  palette: {\n    type: type,\n    primary: {\n      main: (type === 'light' ? '#5c6bc0' : '#5c6bc0'),\n    },\n    secondary: amber,\n    background: {\n      default: (type === 'light' ? '#F5F5F5' : '#121212'),\n      paper: (type === 'light' ? '#FFFFFF' : '#212121'),\n    },\n  }\n});\n// '#f5f5f5'\nfunction App() {\n  const [themeType, setThemeType] = React.useState(getLocalStorage('theme') || 'light');\n\n  const toggleTheme = () => {\n    setThemeType(prevThemeType => {\n      return prevThemeType === 'light' ? 'dark' : 'light';\n    });\n  }\n\n  useEffect(() => {\n    setLocalStorage('theme', themeType);\n  }, [themeType])\n\n  const myTheme = theme(themeType);\n\n  return (\n    <MuiThemeProvider theme={myTheme}>\n      <CssBaseline />\n      <Header toggleTheme={toggleTheme} />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","export function setLocalStorage(key, value) {\n  console.log(key, value);\n  window.localStorage.setItem(key, value);\n}\n\nexport function getLocalStorage(key) {\n  console.log(key);\n  var value = window.localStorage.getItem(key);\n  console.log(value);\n  return value;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('typeface-roboto');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}